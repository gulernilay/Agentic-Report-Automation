import os
import requests
from ..utils.logger import logger
from ..utils.config import settings

def generate_report(json_data) -> str:
    """
    Generates a financial report using Groq's OpenAI-compatible API.
    """
    api_key =settings.GROQ_API_KEY
    print("api_key",api_key)
    model = settings.GROQ_MODEL
    print("model",model)
    url = settings.GROQ_API_URL
    print("url",url)

    # Prompt şablonunu oku
    with open("src/prompts/report_prompt.txt", "r", encoding="utf-8") as f:
        base_prompt = f.read()

    prompt = f"{base_prompt}\n\nVeri:\n{json_data}"

    headers = {
        "Authorization": f"Bearer {api_key}",
        "Content-Type": "application/json"
    }

    payload = {
        "model": model,
        "messages": [
            {"role": "system", "content": "Sen bir finansal analiz asistanısın."},
            {"role": "user", "content": prompt}
        ],
        "temperature": 0.2,
        "max_tokens": 32000
    }

    logger.info(f"Sending prompt to Groq model '{model}' ...")

    response = requests.post(url, headers=headers, json=payload, timeout=120)
    if response.status_code != 200:
        logger.error(f"Groq API error: {response.status_code} - {response.text}")
        raise RuntimeError("Groq model request failed")

    data = response.json()
    text = data["choices"][0]["message"]["content"]
    print("Generated Report:", text)
    logger.info("Report successfully generated by Groq model.")
    return text.strip()
